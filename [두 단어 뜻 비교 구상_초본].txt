[두 단어 뜻 비교 구상_초본]

1. 사용자에게서 이름을 입력받는다.
2. # 사전에 새로운 단어를 추가할 수 있습니다.
>>> kiwi.add_user_word("김갑갑", "NNP")
True
를 사용해서 사용자 이름에 대한 고유명사를 지정한다.

3. >>> kiwi = Kiwi(typos='basic_with_continual')
를 사용해서 오타 수정한다.

4. # 문장 분리와 형태소 분석을 함께 수행할 수도 있습니다.
>>> kiwi.split_into_sents("여러 문장으로 구성된 텍스트네 이걸 분리해줘", return_tokens=True)
[Sentence(text='여러 문장으로 구성된 텍스트네', start=0, end=16, tokens=[
  Token(form='여러', tag='MM', start=0, len=2), 
  Token(form='문장', tag='NNG', start=3, len=2), 
  Token(form='으로', tag='JKB', start=5, len=2), 
  Token(form='구성', tag='NNG', start=8, len=2), 
  Token(form='되', tag='XSV', start=10, len=1), 
  Token(form='ᆫ', tag='ETM', start=11, len=0), 
  Token(form='텍스트', tag='NNG', start=12, len=3), 
  Token(form='이', tag='VCP', start=15, len=1), 
  Token(form='네', tag='EF', start=15, len=1)]),
 Sentence(text='이걸 분리해줘', start=17, end=24, tokens=[
  Token(form='이거', tag='NP', start=17, len=2), 
  Token(form='ᆯ', tag='JKO', start=19, len=0), 
  Token(form='분리', tag='NNG', start=20, len=2), 
  Token(form='하', tag='XSV', start=22, len=1), 
  Token(form='어', tag='EC', start=22, len=1), 
  Token(form='주', tag='VX', start=23, len=1), 
  Token(form='어', tag='EF', start=23, len=1)])]
를 사용해서 문장을 분리하고, 형태소 분석을 한다.

5. Sentence를 기준으로 SentencesN(N에는 1, 2, 3등 숫자가 들어감, 문장의 갯수만큼)이라는 변수에 문장을 하나씩 배분함

6. 각 문장에 있는 동사를 다른 변수에 저장

7. DataFrame을 불러와서(DataFrame만들고 불러오는 것도 마지막에 따로 알려줘) 선택한 동사들이 해당하는 컬럼을 고르고 각 동사들이 반대되는 뜻인지 구분해

내가 하고싶은건 일단
뽑(다)와 나가(다) 둘에 대한 리스트야.

8. 반대라면 BAD를 출력하고 아니라면 GOOD을 출력해